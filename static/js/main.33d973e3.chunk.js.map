{"version":3,"sources":["components/Header.jsx","components/Form.jsx","components/Tasks.jsx","components/Main.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Form","props","value","handleAddTask","handleInputValue","date","handleDate","console","log","Date","toLocaleString","slice","type","onChange","placeholder","onClick","Tasks","active","activeTasks","filter","task","done","activetasks","map","taskInfo","deadline","handleDoneTask","id","handleDeleteTask","doneTasks","fromdate","length","reverse","Main","useState","setValue","setactiveTasks","toISOString","setDate","e","target","preventDefault","alert","undefined","oldArray","index","findIndex","tasks","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33d973e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <div className=\"header\">\r\n        <p className=\"header\">Todo APP</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport { useState } from 'react';\r\nconst Form = (props) => {\r\n    const {value,handleAddTask,handleInputValue,date, handleDate} = props\r\n    console.log(new Date().toLocaleString().slice(0,9))\r\n    return ( \r\n        <>\r\n        \r\n        <form>\r\n            <input type=\"text\" value={value} onChange={handleInputValue} placeholder=\"Dodaj zadanie\"></input> \r\n           <span>Wykonac do</span>   <input type=\"date\" value={date} onChange={handleDate}/> <button onClick={handleAddTask}>Dodaj</button>\r\n        </form>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\n\r\nconst Tasks = (props) => {\r\n    const active = props.activeTasks.filter(task => !task.done)\r\n    const done = props.activeTasks.filter(task => task.done)\r\n    const activetasks = active.map(task => (\r\n        \r\n        \r\n        <>\r\n       \r\n        <div className=\"task\" key={task.id}>\r\n         <span className=\"tasks\"><b>{task.taskInfo} </b> <em className=\"tasks\">  Wykonac do {task.deadline}</em> <button className=\"tasks\" onClick={()=>props.handleDoneTask(task.id)}>Done</button> <button className=\"tasks\" onClick={()=>props.handleDeleteTask(task.id)}>X</button>  </span><br/>\r\n         </div>\r\n        </>\r\n        \r\n    ))\r\n     const doneTasks = done.map(task => (\r\n         <>\r\n         <div className=\"task\" key={task.id}>\r\n         <span className=\"tasks\"><b>{task.taskInfo} </b> <em className=\"tasks\">  zrobione {task.fromdate}</em> <button className=\"tasks\" onClick={()=>props.handleDeleteTask(task.id)}>X</button> </span> <br/>\r\n         </div>\r\n         </>\r\n     ))\r\n    return (  \r\n        <>\r\n        <div className=\"activeTasks\">\r\n            {active.length>0 ?  <h1 >Zadania do wykonania</h1> : null }\r\n        {activetasks.reverse()}\r\n        {done.length>0  ? <h1 className=\"done\" >Zadania zrobione</h1> : null}\r\n        {doneTasks.reverse()}\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Tasks;","import React from 'react';\r\n import { useState } from 'react';\r\nimport Form from './Form';\r\nimport Tasks from './Tasks';\r\n\r\n\r\nconst Main = () => {\r\n    const [value, setValue] = useState('');\r\n    const [activeTasks, setactiveTasks] = useState([]);\r\n    const [date, setDate] = useState(new Date().toISOString().slice(0,10))\r\n    \r\n    const handleInputValue = (e) => {\r\n        setValue(e.target.value)\r\n      }\r\n    \r\n  const handleAddTask = (e) => {\r\n    \r\n    console.log(date)\r\n    e.preventDefault()\r\n      if(value === '') alert('Podaj zadanie')\r\n      else if(date === undefined) alert('Podaj date')\r\n      \r\n      else {\r\n      \r\n    setactiveTasks(oldArray =>[...oldArray, {\r\n        id: activeTasks.length,\r\n        fromdate: new Date().toLocaleString(),\r\n        taskInfo: value,\r\n        deadline: date,\r\n        done: false,\r\n    }])\r\n    setValue('')\r\n}}\r\n    \r\n  const  handleDeleteTask = (id) => {\r\n      const index = activeTasks.findIndex(task => task.id === id);\r\n      console.log(index)\r\n      const tasks = [...activeTasks]\r\n      tasks.splice(index,1);\r\n      setactiveTasks(tasks)\r\n  }\r\n\r\n  const handleDoneTask = (id) => {\r\n    const index = activeTasks.findIndex(task => task.id === id)\r\n    const tasks = [...activeTasks];\r\n    tasks[index] = {...tasks[index],\r\n      id: activeTasks.length,\r\n        fromdate: new Date().toLocaleString(),\r\n        \r\n        deadline: date,\r\n        done: true,\r\n    };\r\n\r\n   console.log(index)\r\n    setactiveTasks(tasks)\r\n    \r\n  }\r\n    \r\n  \r\n   const handleDate = (e) => {\r\n    setDate(e.target.value)\r\n       \r\n   }\r\n   \r\n   \r\n    return ( \r\n\r\n        <>\r\n        <div className=\"main\">\r\n        <Form value ={value} handleInputValue={handleInputValue} activeTasks={activeTasks} date={date} handleAddTask={handleAddTask} handleDate={handleDate}/>\r\n        <Tasks activeTasks={activeTasks} handleDoneTask={handleDoneTask} handleDeleteTask={handleDeleteTask} />\r\n        \r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Main;","import Header from './Header';\nimport Main from './Main';\n\nimport '../App.css';\n\n\n\nfunction App() {\n  \n  \n  return (\n    <>\n    <Header />\n    <Main />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}